const e=e=>Object.prototype.toString.call(e).match(/\w+\s(\w+)/)[1].toLowerCase();var t={__proto__:null,getType:e},r={__proto__:null,capitalizeFirstWordInSentence:e=>"string"==typeof e||e instanceof String?e.trim().length?e.split(". ").map(e=>e.charAt(0).toUpperCase()+e.slice(1)).join(". "):"":e,isNonEmptyString:e=>"string"==typeof e&&""!==e.trim(),isSameText:(t,r,o=!0)=>"string"===e(t)&&"string"===e(t)&&(o?t.toLowerCase()===r.toLowerCase():t===r)};const o=process.env.NODE_DEV="TEST",n=e=>Array.isArray(e)?new Array:Object.assign({}),s=(t,r=[])=>{const o=e(t);if(-1===["object","array"].indexOf(o))return t;const i=r.find(e=>e.original===t);if(i)return i.copy;const a=n(t);return r.push({original:t,copy:a}),Object.keys(t).forEach(e=>{const o=parseInt(e);a[e]=Number.isNaN(o)?s(t[e],r):s(t[o],r)}),a};module.exports.isObject=t=>"object"===e(t),module.exports.deepClone=e=>{try{return structuredClone(e)}catch(t){return s(e)}},o&&(module.exports.newCopyHelper=n);var i={__proto__:null,deepCloneWithoutCircularReferences:e=>JSON.parse(JSON.stringify(e,(()=>{const e=new WeakSet;return(t,r)=>{if("object"==typeof r&&null!==r){if(e.has(r))return;e.add(r)}return r}})())),recursiveDeepClone:s};export{i as objectUtil,t as regexUtil,r as stringUtil};
//# sourceMappingURL=index.modern.js.map
